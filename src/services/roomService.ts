import Room from '../models/Room.js';
import Home from '../models/Home.js';
import { ensureRoomAdminOrOwner } from '../policies/roomPolicy.js';
import { ensureHomeAdminOrOwner } from '../policies/homePolicy.js';


/**
 * üè† T·∫°o room m·ªõi, owner ho·∫∑c admin ƒë∆∞·ª£c ph√©p
 */
export const createRoomService = async (userId: string, name: string, homeId: string) => {
  // ‚úÖ Check quy·ªÅn owner ho·∫∑c admin
  const home = await ensureHomeAdminOrOwner(userId, homeId);

  // ‚úÖ T·∫°o room m·ªõi
  const newRoom = new Room({ name, home: homeId });
  const savedRoom = await newRoom.save();

  // ‚úÖ Th√™m room v√†o home.rooms
  home.rooms.push(savedRoom._id.toString());
  await home.save();

  return savedRoom;
};

/**
 * üóëÔ∏è X√≥a room, owner ho·∫∑c admin ƒë∆∞·ª£c ph√©p
 */
export const deleteRoomService = async (userId: string, roomId: string) => {
  // ‚úÖ D√πng policy ƒë·∫£m b·∫£o quy·ªÅn v√† load room + home
  const { room, home } = await ensureRoomAdminOrOwner(userId, roomId);

  await room.deleteOne();
  await Home.findByIdAndUpdate(home._id, { $pull: { rooms: room._id } });

  return { message: 'Room deleted successfully' };
};

/**
 * üìÑ L·∫•y to√†n b·ªô rooms c·ªßa home
 */
export const getAllRoomsService = async (homeId: string) => {
  return await Room.find({ home: homeId });
};

/**
 * ‚úèÔ∏è C·∫≠p nh·∫≠t room, owner ho·∫∑c admin ƒë∆∞·ª£c ph√©p
 */
export const updateRoomService = async (
  userId: string,
  roomId: string,
  data: { name?: string; type?: string; location?: string },
) => {
  // ‚úÖ D√πng policy ƒë·∫£m b·∫£o quy·ªÅn v√† load room + home
  const { room } = await ensureRoomAdminOrOwner(userId, roomId);

  if (data.name !== undefined) room.name = data.name;
  if (data.type !== undefined) room.type = data.type;
  if (data.location !== undefined) room.location = data.location;

  return await room.save();
};
